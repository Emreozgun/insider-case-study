version: '3'

services:
  backend:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    volumes:
        - ../src:/app/src:ro
        - ../.sequelizerc:/app/.sequelizerc:ro
        - ../package.json:/app/package.json:ro
    ports:
        - "3000:3000"
    environment:
        - NODE_ENV=development
        - PORT=3000
        - COOKIE_EXPIRATION_HOURS=24
        - SQL_USERNAME=emre
        - SQL_HOST=postgres
        - SQL_DATABASE_NAME=insider
        - SQL_PASSWORD=123
        - ELASTICSEARCH_HOST=elasticsearch
    depends_on:
        db-init:
            condition: service_completed_successfully
    links:
        - postgres

  db-init:
      build:
          context: ..
          dockerfile: ./docker/db-init/Dockerfile
      volumes:
          - ../src:/app/src:ro
          - ../docker/db-init/entrypoint.sh:/app/entrypoint.sh:ro
          - ../docker/db-init/bulk.json:/app/bulk.json:ro
          - ../.sequelizerc:/app/.sequelizerc:ro
          - ../package.json:/app/package.json:ro
      environment:
          - NODE_ENV=development
          - SQL_USERNAME=emre
          - SQL_HOST=postgres
          - SQL_DATABASE_NAME=insider
          - SQL_PASSWORD=123
          - ELASTICSEARCH_HOST=elasticsearch
      depends_on:
          elasticsearch:
              condition: service_healthy
          postgres:
              condition: service_healthy
      links:
          - postgres
          - elasticsearch

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
      ports:
          - "9200:9200"
          - "9300:9300"
      expose:
          - "9200"
      environment:
          - node.name=elasticsearch
          - cluster.name=es-docker-cluster
          - discovery.type=single-node
          - xpack.security.enabled=false

      healthcheck:
          test: curl -s http://localhost:9200 >/dev/null || exit 1
          interval: 5s
          timeout: 3s
          retries: 5

  postgres:
    image: postgres:16
    environment:
        - POSTGRES_USER=emre
        - POSTGRES_PASSWORD=123
        - POSTGRES_DB=insider
    ports:
        - "5432:5432"
    volumes:
        - postgres:/var/lib/postgresql/data
    healthcheck:
        test: "pg_isready --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB"
        interval: 5s
        timeout: 3s
        retries: 5

volumes:
    postgres:
        driver: local
    elasticsearch:
        driver: local

